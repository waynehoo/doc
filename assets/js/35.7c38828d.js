(window.webpackJsonp=window.webpackJsonp||[]).push([[35],{446:function(t,e,s){"use strict";s.r(e);var v=s(2),_=Object(v.a)({},(function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("Boxx"),t._v(" "),s("h3",{attrs:{id:"场景"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#场景"}},[t._v("#")]),t._v(" 场景")]),t._v(" "),s("p",[s("strong",[t._v("开发完后，执行"),s("code",[t._v("git add .")]),t._v("并且提交了"),s("code",[t._v('git commit -m "message"')]),t._v(",如果想撤回commit，怎么办？")])]),t._v(" "),s("p",[t._v("一般执行语句"),s("code",[t._v("git reset --soft HEAD^")]),t._v("就可以了，这是撤回commit操作，代码仍然保留。")]),t._v(" "),s("p",[t._v("HEAD^的意思是上一个版本，也可以写成HEAD~1，如果你进行了2次commit，想都撤回，可以使用HEAD~2。")]),t._v(" "),s("p",[t._v("下面简单说下reset的不同参数。")]),t._v(" "),s("p",[s("code",[t._v("--mixed")])]),t._v(" "),s("p",[t._v("不删除工作空间改动代码，撤销commit，并且撤销git add . 操作")]),t._v(" "),s("p",[t._v("这个为默认参数,git reset --mixed HEAD^ 和 git reset HEAD^ 效果是一样的。")]),t._v(" "),s("p",[s("code",[t._v("--soft")])]),t._v(" "),s("p",[t._v("不删除工作空间改动代码，撤销commit，不撤销git add .")]),t._v(" "),s("p",[s("code",[t._v("--hard")])]),t._v(" "),s("p",[t._v("删除工作空间改动代码，撤销commit，撤销git add .")]),t._v(" "),s("p",[s("strong",[t._v("注意完成这个操作后，就恢复到了上一次的commit状态。")])]),t._v(" "),s("hr"),t._v(" "),s("p",[s("strong",[t._v("最后，如果commit注释写错了，只是想改一下注释，只需要：")])]),t._v(" "),s("div",{staticClass:"language-bash line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" commit --amend  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#注意是两个杠")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br")])]),s("p",[t._v("此时会进入默认vim编辑器，修改注释完毕后保存就好了。")])],1)}),[],!1,null,null,null);e.default=_.exports}}]);